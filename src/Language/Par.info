-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Language/Par.y
-----------------------------------------------------------------------------

state 55 contains 10 shift/reduce conflicts.
state 76 contains 10 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pExpr -> Expr                               (0)
	%start_pExpr1 -> Expr1                             (1)
	%start_pExpr2 -> Expr2                             (2)
	%start_pListExpr -> ListExpr                       (3)
	%start_pStmt -> Stmt                               (4)
	%start_pListIdent -> ListIdent                     (5)
	Integer -> L_integ                                 (6)
	Ident -> L_ident                                   (7)
	Expr -> Expr '+' Expr1                             (8)
	Expr -> Expr '-' Expr1                             (9)
	Expr -> Expr '==' Expr1                            (10)
	Expr -> Expr '!=' Expr1                            (11)
	Expr -> Expr '<' Expr1                             (12)
	Expr -> Expr '>' Expr1                             (13)
	Expr -> Expr '<=' Expr1                            (14)
	Expr -> Expr '>=' Expr1                            (15)
	Expr -> Expr 'or' Expr1                            (16)
	Expr -> Expr 'and' Expr1                           (17)
	Expr -> 'if' Expr 'then' Expr 'else' Expr          (18)
	Expr -> Stmt ';' Expr                              (19)
	Expr -> Expr1                                      (20)
	Expr1 -> Expr1 '*' Expr2                           (21)
	Expr1 -> Expr1 '/' Expr2                           (22)
	Expr1 -> 'not' Expr2                               (23)
	Expr1 -> Expr2                                     (24)
	Expr2 -> Integer                                   (25)
	Expr2 -> 'true'                                    (26)
	Expr2 -> 'false'                                   (27)
	Expr2 -> Ident                                     (28)
	Expr2 -> Ident '(' ListExpr ')'                    (29)
	Expr2 -> '(' Expr ')'                              (30)
	ListExpr ->                                        (31)
	ListExpr -> Expr                                   (32)
	ListExpr -> Expr ',' ListExpr                      (33)
	Stmt -> 'val' Ident '=' Expr                       (34)
	Stmt -> 'fun' Ident '(' ListIdent ')' '{' Expr '}'   (35)
	ListIdent ->                                       (36)
	ListIdent -> Ident                                 (37)
	ListIdent -> Ident ',' ListIdent                   (38)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'*'            { PT _ (TS _ 4) }
	'+'            { PT _ (TS _ 5) }
	','            { PT _ (TS _ 6) }
	'-'            { PT _ (TS _ 7) }
	'/'            { PT _ (TS _ 8) }
	';'            { PT _ (TS _ 9) }
	'<'            { PT _ (TS _ 10) }
	'<='           { PT _ (TS _ 11) }
	'='            { PT _ (TS _ 12) }
	'=='           { PT _ (TS _ 13) }
	'>'            { PT _ (TS _ 14) }
	'>='           { PT _ (TS _ 15) }
	'and'          { PT _ (TS _ 16) }
	'else'         { PT _ (TS _ 17) }
	'false'        { PT _ (TS _ 18) }
	'fun'          { PT _ (TS _ 19) }
	'if'           { PT _ (TS _ 20) }
	'not'          { PT _ (TS _ 21) }
	'or'           { PT _ (TS _ 22) }
	'then'         { PT _ (TS _ 23) }
	'true'         { PT _ (TS _ 24) }
	'val'          { PT _ (TS _ 25) }
	'{'            { PT _ (TS _ 26) }
	'}'            { PT _ (TS _ 27) }
	L_integ        { PT _ (TI $$) }
	L_ident        { PT _ (TV $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pExpr    rule  0
	%start_pExpr1   rule  1
	%start_pExpr2   rule  2
	%start_pListExpr rule  3
	%start_pStmt    rule  4
	%start_pListIdent rule  5
	Integer         rule  6
	Ident           rule  7
	Expr            rules 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
	Expr1           rules 21, 22, 23, 24
	Expr2           rules 25, 26, 27, 28, 29, 30
	ListExpr        rules 31, 32, 33
	Stmt            rules 34, 35
	ListIdent       rules 36, 37, 38

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'fun'          shift, and enter state 12
	'if'           shift, and enter state 23
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	'val'          shift, and enter state 13
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr           goto state 28
	Expr1          goto state 17
	Expr2          goto state 18
	Stmt           goto state 20

State 1


	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr1          goto state 27
	Expr2          goto state 18

State 2


	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr2          goto state 26

State 3


	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'fun'          shift, and enter state 12
	'if'           shift, and enter state 23
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	'val'          shift, and enter state 13
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10
	%eof           reduce using rule 31

	Integer        goto state 14
	Ident          goto state 15
	Expr           goto state 16
	Expr1          goto state 17
	Expr2          goto state 18
	ListExpr       goto state 19
	Stmt           goto state 20

State 4


	'fun'          shift, and enter state 12
	'val'          shift, and enter state 13

	Stmt           goto state 11

State 5


	L_ident        shift, and enter state 10
	%eof           reduce using rule 36

	Ident          goto state 8
	ListIdent      goto state 9

State 6


	L_integ        shift, and enter state 7


State 7

	Integer -> L_integ .                                (rule 6)

	'!='           reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'+'            reduce using rule 6
	','            reduce using rule 6
	'-'            reduce using rule 6
	'/'            reduce using rule 6
	';'            reduce using rule 6
	'<'            reduce using rule 6
	'<='           reduce using rule 6
	'=='           reduce using rule 6
	'>'            reduce using rule 6
	'>='           reduce using rule 6
	'and'          reduce using rule 6
	'else'         reduce using rule 6
	'or'           reduce using rule 6
	'then'         reduce using rule 6
	'}'            reduce using rule 6
	%eof           reduce using rule 6


State 8

	ListIdent -> Ident .                                (rule 37)
	ListIdent -> Ident . ',' ListIdent                  (rule 38)

	')'            reduce using rule 37
	','            shift, and enter state 49
	%eof           reduce using rule 37


State 9

	%start_pListIdent -> ListIdent .                    (rule 5)

	%eof           accept


State 10

	Ident -> L_ident .                                  (rule 7)

	'!='           reduce using rule 7
	'('            reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'+'            reduce using rule 7
	','            reduce using rule 7
	'-'            reduce using rule 7
	'/'            reduce using rule 7
	';'            reduce using rule 7
	'<'            reduce using rule 7
	'<='           reduce using rule 7
	'='            reduce using rule 7
	'=='           reduce using rule 7
	'>'            reduce using rule 7
	'>='           reduce using rule 7
	'and'          reduce using rule 7
	'else'         reduce using rule 7
	'or'           reduce using rule 7
	'then'         reduce using rule 7
	'}'            reduce using rule 7
	%eof           reduce using rule 7


State 11

	%start_pStmt -> Stmt .                              (rule 4)

	%eof           accept


State 12

	Stmt -> 'fun' . Ident '(' ListIdent ')' '{' Expr '}'    (rule 35)

	L_ident        shift, and enter state 10

	Ident          goto state 48

State 13

	Stmt -> 'val' . Ident '=' Expr                      (rule 34)

	L_ident        shift, and enter state 10

	Ident          goto state 47

State 14

	Expr2 -> Integer .                                  (rule 25)

	'!='           reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'/'            reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'and'          reduce using rule 25
	'else'         reduce using rule 25
	'or'           reduce using rule 25
	'then'         reduce using rule 25
	'}'            reduce using rule 25
	%eof           reduce using rule 25


State 15

	Expr2 -> Ident .                                    (rule 28)
	Expr2 -> Ident . '(' ListExpr ')'                   (rule 29)

	'!='           reduce using rule 28
	'('            shift, and enter state 46
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'+'            reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'/'            reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'and'          reduce using rule 28
	'else'         reduce using rule 28
	'or'           reduce using rule 28
	'then'         reduce using rule 28
	'}'            reduce using rule 28
	%eof           reduce using rule 28


State 16

	Expr -> Expr . '+' Expr1                            (rule 8)
	Expr -> Expr . '-' Expr1                            (rule 9)
	Expr -> Expr . '==' Expr1                           (rule 10)
	Expr -> Expr . '!=' Expr1                           (rule 11)
	Expr -> Expr . '<' Expr1                            (rule 12)
	Expr -> Expr . '>' Expr1                            (rule 13)
	Expr -> Expr . '<=' Expr1                           (rule 14)
	Expr -> Expr . '>=' Expr1                           (rule 15)
	Expr -> Expr . 'or' Expr1                           (rule 16)
	Expr -> Expr . 'and' Expr1                          (rule 17)
	ListExpr -> Expr .                                  (rule 32)
	ListExpr -> Expr . ',' ListExpr                     (rule 33)

	'!='           shift, and enter state 29
	')'            reduce using rule 32
	'+'            shift, and enter state 30
	','            shift, and enter state 45
	'-'            shift, and enter state 31
	'<'            shift, and enter state 32
	'<='           shift, and enter state 33
	'=='           shift, and enter state 34
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'and'          shift, and enter state 37
	'or'           shift, and enter state 38
	%eof           reduce using rule 32


State 17

	Expr -> Expr1 .                                     (rule 20)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'!='           reduce using rule 20
	')'            reduce using rule 20
	'*'            shift, and enter state 39
	'+'            reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	'/'            shift, and enter state 40
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'=='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'and'          reduce using rule 20
	'else'         reduce using rule 20
	'or'           reduce using rule 20
	'then'         reduce using rule 20
	'}'            reduce using rule 20
	%eof           reduce using rule 20


State 18

	Expr1 -> Expr2 .                                    (rule 24)

	'!='           reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'+'            reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'/'            reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'and'          reduce using rule 24
	'else'         reduce using rule 24
	'or'           reduce using rule 24
	'then'         reduce using rule 24
	'}'            reduce using rule 24
	%eof           reduce using rule 24


State 19

	%start_pListExpr -> ListExpr .                      (rule 3)

	%eof           accept


State 20

	Expr -> Stmt . ';' Expr                             (rule 19)

	';'            shift, and enter state 44


State 21

	Expr2 -> '(' . Expr ')'                             (rule 30)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'fun'          shift, and enter state 12
	'if'           shift, and enter state 23
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	'val'          shift, and enter state 13
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr           goto state 43
	Expr1          goto state 17
	Expr2          goto state 18
	Stmt           goto state 20

State 22

	Expr2 -> 'false' .                                  (rule 27)

	'!='           reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'+'            reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'/'            reduce using rule 27
	';'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'and'          reduce using rule 27
	'else'         reduce using rule 27
	'or'           reduce using rule 27
	'then'         reduce using rule 27
	'}'            reduce using rule 27
	%eof           reduce using rule 27


State 23

	Expr -> 'if' . Expr 'then' Expr 'else' Expr         (rule 18)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'fun'          shift, and enter state 12
	'if'           shift, and enter state 23
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	'val'          shift, and enter state 13
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr           goto state 42
	Expr1          goto state 17
	Expr2          goto state 18
	Stmt           goto state 20

State 24

	Expr1 -> 'not' . Expr2                              (rule 23)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr2          goto state 41

State 25

	Expr2 -> 'true' .                                   (rule 26)

	'!='           reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'+'            reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'/'            reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'and'          reduce using rule 26
	'else'         reduce using rule 26
	'or'           reduce using rule 26
	'then'         reduce using rule 26
	'}'            reduce using rule 26
	%eof           reduce using rule 26


State 26

	%start_pExpr2 -> Expr2 .                            (rule 2)

	%eof           accept


State 27

	%start_pExpr1 -> Expr1 .                            (rule 1)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'*'            shift, and enter state 39
	'/'            shift, and enter state 40
	%eof           accept


State 28

	%start_pExpr -> Expr .                              (rule 0)
	Expr -> Expr . '+' Expr1                            (rule 8)
	Expr -> Expr . '-' Expr1                            (rule 9)
	Expr -> Expr . '==' Expr1                           (rule 10)
	Expr -> Expr . '!=' Expr1                           (rule 11)
	Expr -> Expr . '<' Expr1                            (rule 12)
	Expr -> Expr . '>' Expr1                            (rule 13)
	Expr -> Expr . '<=' Expr1                           (rule 14)
	Expr -> Expr . '>=' Expr1                           (rule 15)
	Expr -> Expr . 'or' Expr1                           (rule 16)
	Expr -> Expr . 'and' Expr1                          (rule 17)

	'!='           shift, and enter state 29
	'+'            shift, and enter state 30
	'-'            shift, and enter state 31
	'<'            shift, and enter state 32
	'<='           shift, and enter state 33
	'=='           shift, and enter state 34
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'and'          shift, and enter state 37
	'or'           shift, and enter state 38
	%eof           accept


State 29

	Expr -> Expr '!=' . Expr1                           (rule 11)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr1          goto state 69
	Expr2          goto state 18

State 30

	Expr -> Expr '+' . Expr1                            (rule 8)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr1          goto state 68
	Expr2          goto state 18

State 31

	Expr -> Expr '-' . Expr1                            (rule 9)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr1          goto state 67
	Expr2          goto state 18

State 32

	Expr -> Expr '<' . Expr1                            (rule 12)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr1          goto state 66
	Expr2          goto state 18

State 33

	Expr -> Expr '<=' . Expr1                           (rule 14)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr1          goto state 65
	Expr2          goto state 18

State 34

	Expr -> Expr '==' . Expr1                           (rule 10)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr1          goto state 64
	Expr2          goto state 18

State 35

	Expr -> Expr '>' . Expr1                            (rule 13)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr1          goto state 63
	Expr2          goto state 18

State 36

	Expr -> Expr '>=' . Expr1                           (rule 15)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr1          goto state 62
	Expr2          goto state 18

State 37

	Expr -> Expr 'and' . Expr1                          (rule 17)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr1          goto state 61
	Expr2          goto state 18

State 38

	Expr -> Expr 'or' . Expr1                           (rule 16)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr1          goto state 60
	Expr2          goto state 18

State 39

	Expr1 -> Expr1 '*' . Expr2                          (rule 21)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr2          goto state 59

State 40

	Expr1 -> Expr1 '/' . Expr2                          (rule 22)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'true'         shift, and enter state 25
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr2          goto state 58

State 41

	Expr1 -> 'not' Expr2 .                              (rule 23)

	'!='           reduce using rule 23
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'/'            reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'=='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'and'          reduce using rule 23
	'else'         reduce using rule 23
	'or'           reduce using rule 23
	'then'         reduce using rule 23
	'}'            reduce using rule 23
	%eof           reduce using rule 23


State 42

	Expr -> Expr . '+' Expr1                            (rule 8)
	Expr -> Expr . '-' Expr1                            (rule 9)
	Expr -> Expr . '==' Expr1                           (rule 10)
	Expr -> Expr . '!=' Expr1                           (rule 11)
	Expr -> Expr . '<' Expr1                            (rule 12)
	Expr -> Expr . '>' Expr1                            (rule 13)
	Expr -> Expr . '<=' Expr1                           (rule 14)
	Expr -> Expr . '>=' Expr1                           (rule 15)
	Expr -> Expr . 'or' Expr1                           (rule 16)
	Expr -> Expr . 'and' Expr1                          (rule 17)
	Expr -> 'if' Expr . 'then' Expr 'else' Expr         (rule 18)

	'!='           shift, and enter state 29
	'+'            shift, and enter state 30
	'-'            shift, and enter state 31
	'<'            shift, and enter state 32
	'<='           shift, and enter state 33
	'=='           shift, and enter state 34
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'and'          shift, and enter state 37
	'or'           shift, and enter state 38
	'then'         shift, and enter state 57


State 43

	Expr -> Expr . '+' Expr1                            (rule 8)
	Expr -> Expr . '-' Expr1                            (rule 9)
	Expr -> Expr . '==' Expr1                           (rule 10)
	Expr -> Expr . '!=' Expr1                           (rule 11)
	Expr -> Expr . '<' Expr1                            (rule 12)
	Expr -> Expr . '>' Expr1                            (rule 13)
	Expr -> Expr . '<=' Expr1                           (rule 14)
	Expr -> Expr . '>=' Expr1                           (rule 15)
	Expr -> Expr . 'or' Expr1                           (rule 16)
	Expr -> Expr . 'and' Expr1                          (rule 17)
	Expr2 -> '(' Expr . ')'                             (rule 30)

	'!='           shift, and enter state 29
	')'            shift, and enter state 56
	'+'            shift, and enter state 30
	'-'            shift, and enter state 31
	'<'            shift, and enter state 32
	'<='           shift, and enter state 33
	'=='           shift, and enter state 34
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'and'          shift, and enter state 37
	'or'           shift, and enter state 38


State 44

	Expr -> Stmt ';' . Expr                             (rule 19)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'fun'          shift, and enter state 12
	'if'           shift, and enter state 23
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	'val'          shift, and enter state 13
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr           goto state 55
	Expr1          goto state 17
	Expr2          goto state 18
	Stmt           goto state 20

State 45

	ListExpr -> Expr ',' . ListExpr                     (rule 33)

	'('            shift, and enter state 21
	')'            reduce using rule 31
	'false'        shift, and enter state 22
	'fun'          shift, and enter state 12
	'if'           shift, and enter state 23
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	'val'          shift, and enter state 13
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10
	%eof           reduce using rule 31

	Integer        goto state 14
	Ident          goto state 15
	Expr           goto state 16
	Expr1          goto state 17
	Expr2          goto state 18
	ListExpr       goto state 54
	Stmt           goto state 20

State 46

	Expr2 -> Ident '(' . ListExpr ')'                   (rule 29)

	'('            shift, and enter state 21
	')'            reduce using rule 31
	'false'        shift, and enter state 22
	'fun'          shift, and enter state 12
	'if'           shift, and enter state 23
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	'val'          shift, and enter state 13
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr           goto state 16
	Expr1          goto state 17
	Expr2          goto state 18
	ListExpr       goto state 53
	Stmt           goto state 20

State 47

	Stmt -> 'val' Ident . '=' Expr                      (rule 34)

	'='            shift, and enter state 52


State 48

	Stmt -> 'fun' Ident . '(' ListIdent ')' '{' Expr '}'    (rule 35)

	'('            shift, and enter state 51


State 49

	ListIdent -> Ident ',' . ListIdent                  (rule 38)

	')'            reduce using rule 36
	L_ident        shift, and enter state 10
	%eof           reduce using rule 36

	Ident          goto state 8
	ListIdent      goto state 50

State 50

	ListIdent -> Ident ',' ListIdent .                  (rule 38)

	')'            reduce using rule 38
	%eof           reduce using rule 38


State 51

	Stmt -> 'fun' Ident '(' . ListIdent ')' '{' Expr '}'    (rule 35)

	')'            reduce using rule 36
	L_ident        shift, and enter state 10

	Ident          goto state 8
	ListIdent      goto state 73

State 52

	Stmt -> 'val' Ident '=' . Expr                      (rule 34)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'fun'          shift, and enter state 12
	'if'           shift, and enter state 23
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	'val'          shift, and enter state 13
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr           goto state 72
	Expr1          goto state 17
	Expr2          goto state 18
	Stmt           goto state 20

State 53

	Expr2 -> Ident '(' ListExpr . ')'                   (rule 29)

	')'            shift, and enter state 71


State 54

	ListExpr -> Expr ',' ListExpr .                     (rule 33)

	')'            reduce using rule 33
	%eof           reduce using rule 33


State 55

	Expr -> Expr . '+' Expr1                            (rule 8)
	Expr -> Expr . '-' Expr1                            (rule 9)
	Expr -> Expr . '==' Expr1                           (rule 10)
	Expr -> Expr . '!=' Expr1                           (rule 11)
	Expr -> Expr . '<' Expr1                            (rule 12)
	Expr -> Expr . '>' Expr1                            (rule 13)
	Expr -> Expr . '<=' Expr1                           (rule 14)
	Expr -> Expr . '>=' Expr1                           (rule 15)
	Expr -> Expr . 'or' Expr1                           (rule 16)
	Expr -> Expr . 'and' Expr1                          (rule 17)
	Expr -> Stmt ';' Expr .                             (rule 19)

	'!='           shift, and enter state 29
			(reduce using rule 19)

	')'            reduce using rule 19
	'+'            shift, and enter state 30
			(reduce using rule 19)

	','            reduce using rule 19
	'-'            shift, and enter state 31
			(reduce using rule 19)

	';'            reduce using rule 19
	'<'            shift, and enter state 32
			(reduce using rule 19)

	'<='           shift, and enter state 33
			(reduce using rule 19)

	'=='           shift, and enter state 34
			(reduce using rule 19)

	'>'            shift, and enter state 35
			(reduce using rule 19)

	'>='           shift, and enter state 36
			(reduce using rule 19)

	'and'          shift, and enter state 37
			(reduce using rule 19)

	'else'         reduce using rule 19
	'or'           shift, and enter state 38
			(reduce using rule 19)

	'then'         reduce using rule 19
	'}'            reduce using rule 19
	%eof           reduce using rule 19


State 56

	Expr2 -> '(' Expr ')' .                             (rule 30)

	'!='           reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'+'            reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'/'            reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'and'          reduce using rule 30
	'else'         reduce using rule 30
	'or'           reduce using rule 30
	'then'         reduce using rule 30
	'}'            reduce using rule 30
	%eof           reduce using rule 30


State 57

	Expr -> 'if' Expr 'then' . Expr 'else' Expr         (rule 18)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'fun'          shift, and enter state 12
	'if'           shift, and enter state 23
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	'val'          shift, and enter state 13
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr           goto state 70
	Expr1          goto state 17
	Expr2          goto state 18
	Stmt           goto state 20

State 58

	Expr1 -> Expr1 '/' Expr2 .                          (rule 22)

	'!='           reduce using rule 22
	')'            reduce using rule 22
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'/'            reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'and'          reduce using rule 22
	'else'         reduce using rule 22
	'or'           reduce using rule 22
	'then'         reduce using rule 22
	'}'            reduce using rule 22
	%eof           reduce using rule 22


State 59

	Expr1 -> Expr1 '*' Expr2 .                          (rule 21)

	'!='           reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	'+'            reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'/'            reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'=='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'and'          reduce using rule 21
	'else'         reduce using rule 21
	'or'           reduce using rule 21
	'then'         reduce using rule 21
	'}'            reduce using rule 21
	%eof           reduce using rule 21


State 60

	Expr -> Expr 'or' Expr1 .                           (rule 16)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'!='           reduce using rule 16
	')'            reduce using rule 16
	'*'            shift, and enter state 39
	'+'            reduce using rule 16
	','            reduce using rule 16
	'-'            reduce using rule 16
	'/'            shift, and enter state 40
	';'            reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'=='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'and'          reduce using rule 16
	'else'         reduce using rule 16
	'or'           reduce using rule 16
	'then'         reduce using rule 16
	'}'            reduce using rule 16
	%eof           reduce using rule 16


State 61

	Expr -> Expr 'and' Expr1 .                          (rule 17)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'!='           reduce using rule 17
	')'            reduce using rule 17
	'*'            shift, and enter state 39
	'+'            reduce using rule 17
	','            reduce using rule 17
	'-'            reduce using rule 17
	'/'            shift, and enter state 40
	';'            reduce using rule 17
	'<'            reduce using rule 17
	'<='           reduce using rule 17
	'=='           reduce using rule 17
	'>'            reduce using rule 17
	'>='           reduce using rule 17
	'and'          reduce using rule 17
	'else'         reduce using rule 17
	'or'           reduce using rule 17
	'then'         reduce using rule 17
	'}'            reduce using rule 17
	%eof           reduce using rule 17


State 62

	Expr -> Expr '>=' Expr1 .                           (rule 15)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'!='           reduce using rule 15
	')'            reduce using rule 15
	'*'            shift, and enter state 39
	'+'            reduce using rule 15
	','            reduce using rule 15
	'-'            reduce using rule 15
	'/'            shift, and enter state 40
	';'            reduce using rule 15
	'<'            reduce using rule 15
	'<='           reduce using rule 15
	'=='           reduce using rule 15
	'>'            reduce using rule 15
	'>='           reduce using rule 15
	'and'          reduce using rule 15
	'else'         reduce using rule 15
	'or'           reduce using rule 15
	'then'         reduce using rule 15
	'}'            reduce using rule 15
	%eof           reduce using rule 15


State 63

	Expr -> Expr '>' Expr1 .                            (rule 13)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'!='           reduce using rule 13
	')'            reduce using rule 13
	'*'            shift, and enter state 39
	'+'            reduce using rule 13
	','            reduce using rule 13
	'-'            reduce using rule 13
	'/'            shift, and enter state 40
	';'            reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'=='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'and'          reduce using rule 13
	'else'         reduce using rule 13
	'or'           reduce using rule 13
	'then'         reduce using rule 13
	'}'            reduce using rule 13
	%eof           reduce using rule 13


State 64

	Expr -> Expr '==' Expr1 .                           (rule 10)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'!='           reduce using rule 10
	')'            reduce using rule 10
	'*'            shift, and enter state 39
	'+'            reduce using rule 10
	','            reduce using rule 10
	'-'            reduce using rule 10
	'/'            shift, and enter state 40
	';'            reduce using rule 10
	'<'            reduce using rule 10
	'<='           reduce using rule 10
	'=='           reduce using rule 10
	'>'            reduce using rule 10
	'>='           reduce using rule 10
	'and'          reduce using rule 10
	'else'         reduce using rule 10
	'or'           reduce using rule 10
	'then'         reduce using rule 10
	'}'            reduce using rule 10
	%eof           reduce using rule 10


State 65

	Expr -> Expr '<=' Expr1 .                           (rule 14)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'!='           reduce using rule 14
	')'            reduce using rule 14
	'*'            shift, and enter state 39
	'+'            reduce using rule 14
	','            reduce using rule 14
	'-'            reduce using rule 14
	'/'            shift, and enter state 40
	';'            reduce using rule 14
	'<'            reduce using rule 14
	'<='           reduce using rule 14
	'=='           reduce using rule 14
	'>'            reduce using rule 14
	'>='           reduce using rule 14
	'and'          reduce using rule 14
	'else'         reduce using rule 14
	'or'           reduce using rule 14
	'then'         reduce using rule 14
	'}'            reduce using rule 14
	%eof           reduce using rule 14


State 66

	Expr -> Expr '<' Expr1 .                            (rule 12)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'!='           reduce using rule 12
	')'            reduce using rule 12
	'*'            shift, and enter state 39
	'+'            reduce using rule 12
	','            reduce using rule 12
	'-'            reduce using rule 12
	'/'            shift, and enter state 40
	';'            reduce using rule 12
	'<'            reduce using rule 12
	'<='           reduce using rule 12
	'=='           reduce using rule 12
	'>'            reduce using rule 12
	'>='           reduce using rule 12
	'and'          reduce using rule 12
	'else'         reduce using rule 12
	'or'           reduce using rule 12
	'then'         reduce using rule 12
	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 67

	Expr -> Expr '-' Expr1 .                            (rule 9)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'!='           reduce using rule 9
	')'            reduce using rule 9
	'*'            shift, and enter state 39
	'+'            reduce using rule 9
	','            reduce using rule 9
	'-'            reduce using rule 9
	'/'            shift, and enter state 40
	';'            reduce using rule 9
	'<'            reduce using rule 9
	'<='           reduce using rule 9
	'=='           reduce using rule 9
	'>'            reduce using rule 9
	'>='           reduce using rule 9
	'and'          reduce using rule 9
	'else'         reduce using rule 9
	'or'           reduce using rule 9
	'then'         reduce using rule 9
	'}'            reduce using rule 9
	%eof           reduce using rule 9


State 68

	Expr -> Expr '+' Expr1 .                            (rule 8)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'!='           reduce using rule 8
	')'            reduce using rule 8
	'*'            shift, and enter state 39
	'+'            reduce using rule 8
	','            reduce using rule 8
	'-'            reduce using rule 8
	'/'            shift, and enter state 40
	';'            reduce using rule 8
	'<'            reduce using rule 8
	'<='           reduce using rule 8
	'=='           reduce using rule 8
	'>'            reduce using rule 8
	'>='           reduce using rule 8
	'and'          reduce using rule 8
	'else'         reduce using rule 8
	'or'           reduce using rule 8
	'then'         reduce using rule 8
	'}'            reduce using rule 8
	%eof           reduce using rule 8


State 69

	Expr -> Expr '!=' Expr1 .                           (rule 11)
	Expr1 -> Expr1 . '*' Expr2                          (rule 21)
	Expr1 -> Expr1 . '/' Expr2                          (rule 22)

	'!='           reduce using rule 11
	')'            reduce using rule 11
	'*'            shift, and enter state 39
	'+'            reduce using rule 11
	','            reduce using rule 11
	'-'            reduce using rule 11
	'/'            shift, and enter state 40
	';'            reduce using rule 11
	'<'            reduce using rule 11
	'<='           reduce using rule 11
	'=='           reduce using rule 11
	'>'            reduce using rule 11
	'>='           reduce using rule 11
	'and'          reduce using rule 11
	'else'         reduce using rule 11
	'or'           reduce using rule 11
	'then'         reduce using rule 11
	'}'            reduce using rule 11
	%eof           reduce using rule 11


State 70

	Expr -> Expr . '+' Expr1                            (rule 8)
	Expr -> Expr . '-' Expr1                            (rule 9)
	Expr -> Expr . '==' Expr1                           (rule 10)
	Expr -> Expr . '!=' Expr1                           (rule 11)
	Expr -> Expr . '<' Expr1                            (rule 12)
	Expr -> Expr . '>' Expr1                            (rule 13)
	Expr -> Expr . '<=' Expr1                           (rule 14)
	Expr -> Expr . '>=' Expr1                           (rule 15)
	Expr -> Expr . 'or' Expr1                           (rule 16)
	Expr -> Expr . 'and' Expr1                          (rule 17)
	Expr -> 'if' Expr 'then' Expr . 'else' Expr         (rule 18)

	'!='           shift, and enter state 29
	'+'            shift, and enter state 30
	'-'            shift, and enter state 31
	'<'            shift, and enter state 32
	'<='           shift, and enter state 33
	'=='           shift, and enter state 34
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'and'          shift, and enter state 37
	'else'         shift, and enter state 75
	'or'           shift, and enter state 38


State 71

	Expr2 -> Ident '(' ListExpr ')' .                   (rule 29)

	'!='           reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'+'            reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'/'            reduce using rule 29
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'and'          reduce using rule 29
	'else'         reduce using rule 29
	'or'           reduce using rule 29
	'then'         reduce using rule 29
	'}'            reduce using rule 29
	%eof           reduce using rule 29


State 72

	Expr -> Expr . '+' Expr1                            (rule 8)
	Expr -> Expr . '-' Expr1                            (rule 9)
	Expr -> Expr . '==' Expr1                           (rule 10)
	Expr -> Expr . '!=' Expr1                           (rule 11)
	Expr -> Expr . '<' Expr1                            (rule 12)
	Expr -> Expr . '>' Expr1                            (rule 13)
	Expr -> Expr . '<=' Expr1                           (rule 14)
	Expr -> Expr . '>=' Expr1                           (rule 15)
	Expr -> Expr . 'or' Expr1                           (rule 16)
	Expr -> Expr . 'and' Expr1                          (rule 17)
	Stmt -> 'val' Ident '=' Expr .                      (rule 34)

	'!='           shift, and enter state 29
	'+'            shift, and enter state 30
	'-'            shift, and enter state 31
	';'            reduce using rule 34
	'<'            shift, and enter state 32
	'<='           shift, and enter state 33
	'=='           shift, and enter state 34
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'and'          shift, and enter state 37
	'or'           shift, and enter state 38
	%eof           reduce using rule 34


State 73

	Stmt -> 'fun' Ident '(' ListIdent . ')' '{' Expr '}'    (rule 35)

	')'            shift, and enter state 74


State 74

	Stmt -> 'fun' Ident '(' ListIdent ')' . '{' Expr '}'    (rule 35)

	'{'            shift, and enter state 77


State 75

	Expr -> 'if' Expr 'then' Expr 'else' . Expr         (rule 18)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'fun'          shift, and enter state 12
	'if'           shift, and enter state 23
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	'val'          shift, and enter state 13
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr           goto state 76
	Expr1          goto state 17
	Expr2          goto state 18
	Stmt           goto state 20

State 76

	Expr -> Expr . '+' Expr1                            (rule 8)
	Expr -> Expr . '-' Expr1                            (rule 9)
	Expr -> Expr . '==' Expr1                           (rule 10)
	Expr -> Expr . '!=' Expr1                           (rule 11)
	Expr -> Expr . '<' Expr1                            (rule 12)
	Expr -> Expr . '>' Expr1                            (rule 13)
	Expr -> Expr . '<=' Expr1                           (rule 14)
	Expr -> Expr . '>=' Expr1                           (rule 15)
	Expr -> Expr . 'or' Expr1                           (rule 16)
	Expr -> Expr . 'and' Expr1                          (rule 17)
	Expr -> 'if' Expr 'then' Expr 'else' Expr .         (rule 18)

	'!='           shift, and enter state 29
			(reduce using rule 18)

	')'            reduce using rule 18
	'+'            shift, and enter state 30
			(reduce using rule 18)

	','            reduce using rule 18
	'-'            shift, and enter state 31
			(reduce using rule 18)

	';'            reduce using rule 18
	'<'            shift, and enter state 32
			(reduce using rule 18)

	'<='           shift, and enter state 33
			(reduce using rule 18)

	'=='           shift, and enter state 34
			(reduce using rule 18)

	'>'            shift, and enter state 35
			(reduce using rule 18)

	'>='           shift, and enter state 36
			(reduce using rule 18)

	'and'          shift, and enter state 37
			(reduce using rule 18)

	'else'         reduce using rule 18
	'or'           shift, and enter state 38
			(reduce using rule 18)

	'then'         reduce using rule 18
	'}'            reduce using rule 18
	%eof           reduce using rule 18


State 77

	Stmt -> 'fun' Ident '(' ListIdent ')' '{' . Expr '}'    (rule 35)

	'('            shift, and enter state 21
	'false'        shift, and enter state 22
	'fun'          shift, and enter state 12
	'if'           shift, and enter state 23
	'not'          shift, and enter state 24
	'true'         shift, and enter state 25
	'val'          shift, and enter state 13
	L_integ        shift, and enter state 7
	L_ident        shift, and enter state 10

	Integer        goto state 14
	Ident          goto state 15
	Expr           goto state 78
	Expr1          goto state 17
	Expr2          goto state 18
	Stmt           goto state 20

State 78

	Expr -> Expr . '+' Expr1                            (rule 8)
	Expr -> Expr . '-' Expr1                            (rule 9)
	Expr -> Expr . '==' Expr1                           (rule 10)
	Expr -> Expr . '!=' Expr1                           (rule 11)
	Expr -> Expr . '<' Expr1                            (rule 12)
	Expr -> Expr . '>' Expr1                            (rule 13)
	Expr -> Expr . '<=' Expr1                           (rule 14)
	Expr -> Expr . '>=' Expr1                           (rule 15)
	Expr -> Expr . 'or' Expr1                           (rule 16)
	Expr -> Expr . 'and' Expr1                          (rule 17)
	Stmt -> 'fun' Ident '(' ListIdent ')' '{' Expr . '}'    (rule 35)

	'!='           shift, and enter state 29
	'+'            shift, and enter state 30
	'-'            shift, and enter state 31
	'<'            shift, and enter state 32
	'<='           shift, and enter state 33
	'=='           shift, and enter state 34
	'>'            shift, and enter state 35
	'>='           shift, and enter state 36
	'and'          shift, and enter state 37
	'or'           shift, and enter state 38
	'}'            shift, and enter state 79


State 79

	Stmt -> 'fun' Ident '(' ListIdent ')' '{' Expr '}' .    (rule 35)

	';'            reduce using rule 35
	%eof           reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 39
Number of terminals: 29
Number of non-terminals: 14
Number of states: 80
